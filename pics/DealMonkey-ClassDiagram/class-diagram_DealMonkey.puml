@startuml class-diagram_DealMonkey

class User {
    - friends: List<User>
    - tasks: List<Tasks>
    - userId: number
    - points: number
    - name: string
    - birthDate: Date
    - password: string
    - registrationDate: Date
    - level: number
    + getUserId: number
    + getPoints: number
    + getName: string
    + getBirthDate: Date
    + getPassword: string
    + getregistrationDate: Date
    + getLevel: number

    + toString(): string
    + addFriend(): User
    + removeFriend(): User
    + getFriend(id: number): User
    + getAllFriends(): User[]
    + addPoints(points:number): void
    + removePoints(points: number): void
    + updateLevel(): void
    + resetPasswort(password: string): void
}

class AppTimes {
    - timeId: number
    - userId: number
    - startTime: Time
    - endTime: Time
    - onlineDate: Date

    + getTimeId: number
    + getUserId: number
    + getStartTime: Time
    + getEndTime: Time
    + getOnlineDate: Date
}

class ProgressStatistics {
    + drawProgressGraph(timeSpan: Time): void
    + showLevel(): void
    + showTaskProgress(Task task): void
}

class Deal {
    - dealId: number
    - dealName: string
    - experationsDate: Date

    + getDealId: number
    + getDealName: string
    + getExperationsDate: Date

    + sendNotification(): void
}

class TaskDeal {

}

class SystemDeal {
    
}

class StealDeal {

}

class Todo {
    - isFinished: boolean
    - dueDate: Date
    - todoPriority: number

    + getIsFinished: boolean
    + getDueDate: Date
    + getTodoPriority: number
}

class Habit {
    - checkData: number | string

    + getCheckDate: number | string
}

class Task {
    - taskId: number
    - taskName: string

    + getTaskId: number
    + getTaskName: string
}

class TaskRepository {
    - tasks: PriorityQueue<Task>

    + addTask(Task): void
    + updateTask(Task): void
    + removeTask(Task): void
}

Habit --^ Task
Todo --^ Task
TaskDeal --^ Deal
SystemDeal --^ Deal
StealDeal --^ Deal
TaskRepository -- Task : uses >
User -- Friend : uses <
ProgressStatistics -- AppTimes : uses >

@enduml